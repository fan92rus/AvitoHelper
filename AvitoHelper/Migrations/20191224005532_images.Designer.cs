// <auto-generated />
using System;
using AvitoHelper.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AvitoHelper.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191224005532_images")]
    partial class images
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AvitoHelper.Services.Purchace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("PayId")
                        .HasColumnType("integer");

                    b.Property<decimal>("outSumm")
                        .HasColumnType("numeric");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<int>("uId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Purchaces");
                });

            modelBuilder.Entity("AvitoHelper.Types.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IgnoreFirstIteration")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AvitoHelper.Types.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Orderid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AvitoHelper.Types.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccessKey")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DayEndSubscribe")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Deep")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("LastEmailMessageTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Limit")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AvitoHelper.Types.Word", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer");

                    b.Property<int?>("Orderid1")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Orderid");

                    b.HasIndex("Orderid1");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("AvitoHelper.Types.Order", b =>
                {
                    b.HasOne("AvitoHelper.Types.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AvitoHelper.Types.Product", b =>
                {
                    b.HasOne("AvitoHelper.Types.Order", null)
                        .WithMany("products")
                        .HasForeignKey("Orderid");
                });

            modelBuilder.Entity("AvitoHelper.Types.Word", b =>
                {
                    b.HasOne("AvitoHelper.Types.Order", null)
                        .WithMany("NeedWords")
                        .HasForeignKey("Orderid");

                    b.HasOne("AvitoHelper.Types.Order", null)
                        .WithMany("ignoreWords")
                        .HasForeignKey("Orderid1");
                });
#pragma warning restore 612, 618
        }
    }
}
